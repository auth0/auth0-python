from ..rest import RestClient as RestClient, RestClientOptions as RestClientOptions
from ..types import TimeoutType as TimeoutType
from typing import Any

class Connections:
    def all_async(self, strategy: str | None = None, fields: list[str] | None = None, include_fields: bool = True, page: int | None = None, per_page: int | None = None, extra_params: dict[str, Any] | None = None, name: str | None = None) -> list[dict[str, Any]]: ...
    def get_async(self, id: str, fields: list[str] | None = None, include_fields: bool = True) -> dict[str, Any]: ...
    def delete_async(self, id: str) -> Any: ...
    def update_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def create_async(self, body: dict[str, Any]) -> dict[str, Any]: ...
    def delete_user_by_email_async(self, id: str, email: str) -> Any: ...
