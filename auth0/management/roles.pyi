from ..rest import RestClient as RestClient, RestClientOptions as RestClientOptions
from ..types import TimeoutType as TimeoutType
from typing import Any

class Roles:
    def list_async(self, page: int = 0, per_page: int = 25, include_totals: bool = True, name_filter: str | None = None): ...
    def create_async(self, body: dict[str, Any]) -> dict[str, Any]: ...
    def get_async(self, id: str) -> dict[str, Any]: ...
    def delete_async(self, id: str) -> Any: ...
    def update_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def list_users_async(self, id: str, page: int = 0, per_page: int = 25, include_totals: bool = True, from_param: str | None = None, take: int | None = None): ...
    def add_users_async(self, id: str, users: list[str]) -> dict[str, Any]: ...
    def list_permissions_async(self, id: str, page: int = 0, per_page: int = 25, include_totals: bool = True): ...
    def remove_permissions_async(self, id: str, permissions: list[dict[str, str]]) -> Any: ...
    def add_permissions_async(self, id: str, permissions: list[dict[str, str]]) -> dict[str, Any]: ...
