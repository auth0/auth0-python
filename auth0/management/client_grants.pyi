from ..rest import RestClient as RestClient, RestClientOptions as RestClientOptions
from ..types import TimeoutType as TimeoutType
from typing import Any

class ClientGrants:
    def all_async(self, audience: str | None = None, page: int | None = None, per_page: int | None = None, include_totals: bool = False, client_id: str | None = None, allow_any_organization: bool | None = None): ...
    def create_async(self, body: dict[str, Any]) -> dict[str, Any]: ...
    def delete_async(self, id: str) -> Any: ...
    def update_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def get_organizations_async(self, id: str, page: int | None = None, per_page: int | None = None, include_totals: bool = False, from_param: str | None = None, take: int | None = None): ...
