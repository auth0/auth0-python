from ..rest import RestClient as RestClient, RestClientOptions as RestClientOptions
from ..types import TimeoutType as TimeoutType
from typing import Any

class Hooks:
    def all_async(self, enabled: bool = True, fields: list[str] | None = None, include_fields: bool = True, page: int | None = None, per_page: int | None = None, include_totals: bool = False): ...
    def create_async(self, body: dict[str, Any]) -> dict[str, Any]: ...
    def get_async(self, id: str, fields: list[str] | None = None) -> dict[str, Any]: ...
    def delete_async(self, id: str) -> Any: ...
    def update_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def get_secrets_async(self, id: str) -> dict[str, Any]: ...
    def add_secrets_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
    def delete_secrets_async(self, id: str, body: list[str]) -> Any: ...
    def update_secrets_async(self, id: str, body: dict[str, Any]) -> dict[str, Any]: ...
